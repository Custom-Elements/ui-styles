@import "./variables.less";
@import "./flags.less";
@import "./borders.less";

.one-shadow {
  .box-shadow(1px 1px 1px @hairline-grey);
}
.two-shadow {
  .box-shadow(2px 2px 2px @hairline-grey);
}

.hover {
  &:hover {
    .transform(scale(1.1, 1.1));
  }
}

.disabled {
  background: repeating-linear-gradient(
    45deg,
    @disabled-white,
    @disabled-white 0.5em,
    @disabled-grey 0.5em,
    @disabled-grey 1em
  );
  cursor: default;
}

[invisible] {
  opacity: 0;
  width:1px;
}

[horizontal][spaced], row[spaced] {
  > * {
    margin-right: @margin;
  }
}

[vertical][spaced], column[spaced] {
  > * {
    margin-bottom: @margin;
  }
  > :last-child {
    margin-bottom: 0;
  }
}

[padded] {
  padding: @pad;
}

[micropadded] {
  padding: @micropad;
}

row[padded] {
  padding: 0;
  padding-top: @pad;
  padding-bottom: @pad;
  > * {
    padding-left: @pad;
  }
}

row[spaced] {
  margin-bottom: @margin;
}

column[padded] {
  padding: 0;
  padding-left: @pad;
  padding-right: @pad;
}

[centered] {
  align-items: center;
}

container, [container] {
  display: block;
  max-width: 60em;
  margin-top: 0;
  margin-right: auto;
  margin-bottom: 0;
  margin-left: auto;
  overflow: visible;
}

box, [box] {
  display: block;
  padding: 1em;
  margin-top: 0.5em;
  margin-right: 0;
  margin-bottom: 1em;
  margin-left: 0;
  .border;
}

row {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  &[start] {
    justify-content: flex-start;
  }
  &[center] {
    justify-content: center;
  }
  &[end] {
    justify-content: flex-end;
  }
}

column {
  display: flex;
  flex-direction: column;
}

circle, .circle {
  border-radius: 50%;
}

background, [background] {
  display: block;
  position: relative;
  width: 100%;
  height: 100%;
  z-index: -1;
}

background[inverted] {
  background-color: @black;
  color: @white;
}

panel, [panel], .panel {
  display: flex;
  justify-content: center;
  align-content: center;
  align-items: center;
  text-align: center;
}

//layout control, fill up the entire parent screen
fullscreen, [fullscreen], [full], .full {
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: 0;
  padding: 0;
}

[fill], .fill {
  display: flex;
  line-height: 1;
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

//layout control, dock to the left of the screen
leftdock, [leftdock] {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
}

//stack children right on top of one another
stack, [stack] {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  & > :nth-child(1) {
  }
  & > :nth-child(2) {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

[larger], .larger {
  font-size: 1.5em;
}

[smaller], .smaller {
  font-size: 0.62em;
}

[invert], .invert {
  -webkit-filter: invert(100%);
  filter: invert(100%);
}

//handy colors
[red], .red {
  color: @red;
}

[orange], .orange {
  color: @orange;
}

[yellow], .yellow {
  color: @yellow;
}

[green], .green {
  color: @green;
}

[blue], .blue {
  color: @blue;
}

[indigo], .indigo {
  color: @indigo;
}

[violet], .violet {
  color: @violet;
}

//The 'disabler'. This is an element you put over anything to disable it.
.disabler {
  box-sizing: border-box;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  .transition(@transition);
  .backface-visibility(hidden);
}

.disabler-enabled {
  .transform(rotateX(180deg));
  .disabled;
}

.disabler-disabled {
  .transform(rotateX(0deg));
  .disabled;
}

[clickable] {
  cursor: pointer;
}

icon {
  display: inline-flex;
  justify-content: center;
}

linefeed {
  display: block;
  height: 1em;
  width: 100%;
}

pad {
  display: flex;
  flex: 1;
  padding: @pad;
}

[expand] {
  flex: 1;
}
